{"ast":null,"code":"import Axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from '../constants/userConstants';\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["C:/Users/user/Documents/REACT/e-commerce/fontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","USER_REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,gBAAnD,EAAqEC,qBAArE,EAA4FC,qBAA5F,QAAyH,4BAAzH;;AACA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAkB;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,mBAAR;AAA6BU,IAAAA,OAAO,EAAC;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,mBAAP;AAA4BS,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAZ,IAAAA,MAAM,CAACc,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GAJD,CAIE,OAAMK,KAAN,EAAY;AACVR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,gBAAP;AAAyBQ,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AAEH;AACJ,CAVD;;AAYA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAMC,QAAN,IAAkB;AAC1DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,qBAAR;AAA+BO,IAAAA,OAAO,EAAC;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAvC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAW,qBAAX,EAAkC;AAACO,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAlC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,qBAAP;AAA8BM,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACAZ,IAAAA,MAAM,CAACc,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GAJD,CAIE,OAAMK,KAAN,EAAY;AACVR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEW,kBAAP;AAA2BV,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AAEH;AACJ,CAVD;;AAYA,SAASZ,MAAT,EAAiBa,QAAjB","sourcesContent":["import Axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from '../constants/userConstants';\r\nconst signin = (email, password) => async(dispatch) =>{\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload:{email, password}  });\r\n    try{\r\n        const { data } = await Axios.post(\"/api/users/signin\", {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch(error){\r\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\r\n\r\n    }\r\n}\r\n\r\nconst register = (name, email, password) => async(dispatch) =>{\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload:{name, email, password}  });\r\n    try{\r\n        const { data } = await Axios.post(\"/api/users/register\", {name, email, password});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch(error){\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\r\n\r\n    }\r\n}\r\n\r\nexport { signin, register };"]},"metadata":{},"sourceType":"module"}