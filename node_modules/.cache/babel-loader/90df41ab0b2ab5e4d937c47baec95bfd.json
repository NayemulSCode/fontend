{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from \"../constants/productConstants\";\nimport axios from \"axios\";\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["C:/Users/user/Documents/REACT/e-commerce/fontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","post","headers","token","detailsProduct","productId"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,EACIC,uBADJ,EAC6BC,uBAD7B,EACsDC,oBADtD,EAC4EC,oBAD5E,EACkGC,oBADlG,EACwHC,iBADxH,QACiJ,+BADjJ;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAAvB;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,oBAAR;AAA8Be,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CATD;;AAYA,MAAMC,WAAW,GAAIC,OAAD,IAAY,OAAMR,QAAN,EAAgBS,QAAhB,KAA6B;AACzD,MAAG;AACCT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,oBAAP;AAA6BU,MAAAA,OAAO,EAAEI;AAAtC,KAAD,CAAR;AACA,UAAM;AAACE,MAAAA,UAAU,EAAE;AAACC,QAAAA;AAAD;AAAb,QAA2BF,QAAQ,EAAzC;AACA,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BJ,OAA5B,EAAqC;AACtDK,MAAAA,OAAO,EAAC;AACR,yBAAkB,YAAYF,QAAQ,CAACG;AAD/B;AAD8C,KAArC,CAArB;AAKAd,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,oBAAP;AAA6BS,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GATD,CASC,OAAMG,KAAN,EAAY;AACTL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,iBAAP;AAA0BQ,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AACJ,CAbD;;AAgBA,MAAMS,cAAc,GAAIC,SAAD,IAAe,MAAOhB,QAAP,IAAmB;AACrD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,uBAAP;AAAgCa,MAAAA,OAAO,EAAEY;AAAzC,KAAD,CAAR;AACA,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,mBAAmBa,SAA7B,CAArB;AACAhB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,uBAAP;AAAgCY,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAJD,CAKA,OAAMG,KAAN,EAAY;AACRL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,oBAAP;AAA6BW,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,SAASP,YAAT,EAAuBgB,cAAvB,EAAuCR,WAAvC","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from \"../constants/productConstants\"\r\nimport axios from \"axios\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_LIST_REQUEST});\r\n        const { data } = await axios.get(\"/api/products\");\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });  \r\n    }\r\n    catch(error){\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nconst saveProduct = (product)=> async(dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n        const {userSignin: {userInfo}} = getState();\r\n        const {data} = await Axios.post('/api/products', product, {\r\n            headers:{\r\n            'Authorization' : 'Bearer ' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nexport { listProducts, detailsProduct, saveProduct }"]},"metadata":{},"sourceType":"module"}