{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\";\nimport axios from \"axios\";\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["C:/Users/user/Documents/REACT/e-commerce/fontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","deleteProduct","delete","Authorization","success"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, \r\n    PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, \r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\"\r\nimport axios from \"axios\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_LIST_REQUEST});\r\n        const { data } = await axios.get(\"/api/products\");\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });  \r\n    }\r\n    catch(error){\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nconst saveProduct = (product)=> async(dispatch, getState) => {\r\n    try{\r\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n        const {userSignin: {userInfo}} = getState();\r\n        if(!product._id){\r\n            const {data} = await Axios.post('/api/products', product, {\r\n                headers:{\r\n                'Authorization' : 'Bearer ' + userInfo.token\r\n                }\r\n            });\r\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n        }else{\r\n            const {data} = await Axios.put('/api/products/' + product._id, product, {\r\n                headers:{\r\n                'Authorization' : 'Bearer ' + userInfo.token\r\n                }\r\n            });\r\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n        }\r\n        \r\n    }catch(error){\r\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\n\r\nconst detailsProduct = (productId) => async (dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nconst deleteProduct = (productId) => async (dispatch, ) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\r\n        const {data} = await axios.delete(\"/api/products/\" + productId,{\r\n            headers:{\r\n                Authorization: 'Bearer' + userInfo.token\r\n            }\r\n        });\r\n        dispatch({type: PRODUCT_DELETE_SUCCESS, payload: data, success:true});\r\n    }\r\n    catch(error){\r\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.message});\r\n    }\r\n}\r\n\r\nexport { listProducts, detailsProduct, saveProduct, deleteProduct }"]},"metadata":{},"sourceType":"module"}